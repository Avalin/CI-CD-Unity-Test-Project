name: ⏳ Prepare Metadata

on:
  workflow_call:
    inputs:
      buildType:
        type: string
        default: preview
        required: false
      version:
        type: string
        required: false
    outputs:
      buildType:
        value: ${{ jobs.metadata.outputs.buildType }}
      triggeredBy:
        value: ${{ jobs.metadata.outputs.triggeredBy }}
      version:
        value: ${{ jobs.metadata.outputs.version }}
      validDeployTargets:
        value: ${{ jobs.metadata.outputs.validDeployTargets }}
      requiresCombined:
        value: ${{ jobs.metadata.outputs.requiresCombined }}
      skipPerPlatform:
        value: ${{ jobs.metadata.outputs.skipPerPlatform }}

jobs:
  resolve-trigger:
    runs-on: ubuntu-latest
    outputs:
      triggeredBy: ${{ steps.event.outputs.triggeredBy }}
    steps:
      - id: event
        run: echo "triggeredBy=$GITHUB_EVENT_NAME" >> "$GITHUB_OUTPUT"

  resolve-build-type:
    runs-on: ubuntu-latest
    outputs:
      buildType: ${{ steps.set.outputs.buildType }}
    steps:
      - id: set
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            BUILD_TYPE="release"
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            BUILD_TYPE="${{ inputs.buildType || 'preview' }}"
          else
            BUILD_TYPE="${{ inputs.buildType || 'preview' }}"
          fi
          echo "buildType=$BUILD_TYPE" >> $GITHUB_OUTPUT

  version:
    needs: resolve-build-type
    uses: avalin/unity-ci-templates/.github/workflows/build-version-generator.yml@main
    with:
      buildType: ${{ needs.resolve-build-type.outputs.buildType }}
      version: ${{ inputs.version }}

  validate-deploy-targets:
    uses: ./.github/workflows/validate-deploy-targets.yml
    with:
      deployTargets: ${{ vars.DEPLOY_TARGETS }}

  analyze-artifact-strategy:
    needs: validate-deploy-targets
    if: needs.validate-deploy-targets.outputs.skipAnalysis != 'true'
    uses: ./.github/workflows/analyze-artifact-strategy.yml
    with:
      artifactSource: build
      deployTargets: ${{ needs.validate-deploy-targets.outputs.validTargets }}

  metadata:
    name: Summarize Metadata
    runs-on: ubuntu-latest
    needs:
      - resolve-trigger
      - resolve-build-type
      - version
      - validate-deploy-targets
      - analyze-artifact-strategy
    outputs:
      version: ${{ needs.version.outputs.version }}
      buildType: ${{ needs.resolve-build-type.outputs.buildType }}
      triggeredBy: ${{ needs.resolve-trigger.outputs.triggeredBy }}
      validDeployTargets: ${{ needs.validate-deploy-targets.outputs.validTargets }}
      requiresCombined: ${{ needs.analyze-artifact-strategy.outputs.requiresCombined }}
      skipPerPlatform: ${{ needs.analyze-artifact-strategy.outputs.skipPerPlatform }}
    steps:
      - name: Summarize
        run: |
          DEPLOY_TARGETS=$(echo '${{ needs.validate-deploy-targets.outputs.validTargets }}' | jq -c '.')
          echo "## 🚀 Build Metadata Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Key                          | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|------------------------------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Version                      | ${{ needs.version.outputs.version }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Type                   | ${{ needs.resolve-build-type.outputs.buildType }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Triggered by                 | ${{ needs.resolve-trigger.outputs.triggeredBy }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Deploy Targets               | \`$DEPLOY_TARGETS\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Requires Combined Artifacts  | ${{ needs.analyze-artifact-strategy.outputs.requiresCombined }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Skip Per-Platform Artifacts  | ${{ needs.analyze-artifact-strategy.outputs.skipPerPlatform }} |" >> $GITHUB_STEP_SUMMARY