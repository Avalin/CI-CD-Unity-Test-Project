name: üß™ Test Release Workflow

on:
  workflow_dispatch:
    inputs:
      buildType:
        description: "preview = build only!"
        required: true
        default: "preview"
        type: choice
        options:
          - preview
          - release_candidate
          - release
      version:
        description: "Optional version string (e.g. v1.2.3 or v1.2.3-rc.1). Leave blank to auto-generate (e.g. PR-0001, manual-main)"
        required: false
        default: "v0.0.0"
        type: string
      projectName:
        description: "Project name for artifacts"
        required: true
        default: "Unity_CI_Templates"
      targetPlatforms:
        description: "JSON array of platforms to build"
        required: true
        default: '["Android", "WebGL", "StandaloneLinux64", "StandaloneWindows", "StandaloneWindows64", "StandaloneOSX", "iOS"]'
      deployTargets:
        description: "JSON array of deploy targets (e.g. [\"itch.io\",\"s3\"])"
        required: true
        default: '["steam", "gh-pages"]'
        type: string

permissions:
  contents: write

jobs:
  prepare_metadata:
    name: ‚è≥ Prepare Metadata
    uses: ./.github/workflows/prepare-metadata.yml
    with:
      skipTests: true
      testsOnly: false
      deployTargets: ${{ inputs.deployTargets }}
      buildType: ${{ inputs.buildType }}
      version: ${{ inputs.version }}

  build:
    name: üß© Create Dry-Build
    needs: prepare_metadata
    uses: ./.github/workflows/dry-build.yml
    with:
      version: ${{ needs.prepare_metadata.outputs.version }}
      projectName: ${{ inputs.projectName }}
      targetPlatforms: ${{ inputs.targetPlatforms }}
      combineArtifacts: ${{ needs.prepare_metadata.outputs.requiresCombined }}
    secrets: inherit

  release:
    name: üì¶ Test Release Workflow
    needs: [ prepare_metadata, build ]
    if: ${{ inputs.buildType == 'release' || inputs.buildType == 'release_candidate' }}
    uses: ./.github/workflows/step-3-release.yml
    with:
      buildType: ${{ needs.prepare_metadata.outputs.buildType }}
      version: ${{ needs.prepare_metadata.outputs.version }}
      projectName: ${{ inputs.projectName }}
      targetPlatforms: ${{ inputs.targetPlatforms }}
      combineArtifacts: ${{ needs.prepare_metadata.outputs.requiresCombined }}
      skipPerPlatformArtifacts: ${{ needs.prepare_metadata.outputs.skipPerPlatform }}  
    secrets: inherit