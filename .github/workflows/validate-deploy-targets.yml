# .github/workflows/validate-deploy-targets.yaml
name: ‚úÖ Validate Deploy Targets

on:
  workflow_call:
    inputs:
      deployTargets:
        type: string
        required: true
    outputs:
      validTargets:
        value: ${{ jobs.validate.outputs.valid }}

jobs:
  validate:
    name: ‚úÖ Validate Deploy Targets
    runs-on: ubuntu-latest
    outputs:
      valid: ${{ steps.filter.outputs.validTargets }}
    steps:
      - name: Filter Valid Targets
        id: filter
        run: |
          VALID_TARGETS=("gh-pages" "itch.io" "appcenter" "firebase" "s3" "steam" "discord" "custom-server" "testflight")
          RAW_INPUT='${{ inputs.deployTargets }}'

          echo "üîç Raw deployTargets input: $RAW_INPUT"

          if ! echo "$RAW_INPUT" | jq empty 2>/dev/null; then
            echo "‚ùå Invalid JSON in deployTargets input!"
            echo "validTargets=[]" >> $GITHUB_OUTPUT
            exit 0
          fi

          INPUTS=$(echo "$RAW_INPUT" | jq -r '.[]')
          VALID=()
          INVALID=()

          for TARGET in $INPUTS; do
            if [[ " ${VALID_TARGETS[*]} " =~ " ${TARGET} " ]]; then
              VALID+=("$TARGET")
            else
              INVALID+=("$TARGET")
            fi
          done

          echo "‚úÖ Valid targets: ${VALID[*]}"
          if [ "${#INVALID[@]}" -gt 0 ]; then
            echo "‚ö†Ô∏è Invalid targets: ${INVALID[*]}"
          fi

          json=$(printf '%s\n' "${VALID[@]}" | jq -R . | jq -s .)
          echo "validTargets<<EOF" >> $GITHUB_OUTPUT
          echo "$json" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
