name: ‚ôªÔ∏è Generate Notification

on:
  workflow_call:
    inputs:
      releaseResult:
        required: true
        type: string
      releaseErrorMessage:
        required: false
        type: string
      deployResult:
        required: true
        type: string
      version:
        required: true
        type: string
    outputs:
      title:
        description: 'Main notification title'
        value: ${{ jobs.generate.outputs.title }}
      message:
        description: 'Notification body message'
        value: ${{ jobs.generate.outputs.message }}
      slackMessage:
        description: 'Slack-formatted message'
        value: ${{ jobs.generate.outputs.slackMessage }}
      discordMessage:
        description: 'Discord-formatted message'
        value: ${{ jobs.generate.outputs.discordMessage }}
      teamsMessage:
        description: 'Teams-formatted message'
        value: ${{ jobs.generate.outputs.teamsMessage }}
      status:
        description: 'Status for use in color codes (success, failure, etc)'
        value: ${{ jobs.generate.outputs.status }}

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      title: ${{ steps.vars.outputs.title }}
      message: ${{ steps.vars.outputs.message }}
      slackMessage: ${{ steps.vars.outputs.slackMessage }}
      discordMessage: ${{ steps.vars.outputs.discordMessage }}
      teamsMessage: ${{ steps.vars.outputs.teamsMessage }}
      status: ${{ steps.vars.outputs.status }}
    steps:
      - name: üß† Set Notification Variables
        id: vars
        run: |
          RELEASE="${{ inputs.releaseResult }}"
          DEPLOY="${{ inputs.deployResult }}"
          VERSION="${{ inputs.version }}"
          ERROR="${{ inputs.releaseErrorMessage }}"
          REPO="${{ github.repository }}"
          RELEASE_URL="https://github.com/${REPO}/releases/tag/${VERSION}"
          RUN_URL="https://github.com/${REPO}/actions/runs/${GITHUB_RUN_ID}"

          if [[ "$RELEASE" == "success" ]]; then
            if [[ "$DEPLOY" == "success" ]]; then
              TITLE="‚úÖ Release & Deploy Succeeded - ${VERSION}"
              MESSAGE="Release \`${VERSION}\` completed successfully. [View Release](${RELEASE_URL})"
              STATUS="success"
            elif [[ "$DEPLOY" == "skipped" ]]; then
              TITLE="‚úÖ Release Succeeded (No Deploy) - ${VERSION}"
              MESSAGE="Release \`${VERSION}\` completed successfully. No deployment targets set. [View Release](${RELEASE_URL})"
              STATUS="neutral"
            else
              TITLE="‚ö†Ô∏è Release Succeeded, Deploy Failed - ${VERSION}"
              MESSAGE="Release \`${VERSION}\` succeeded, but deployment failed. [View Release](${RELEASE_URL})"
              STATUS="failure"
            fi
          else
            TITLE="‚ùå Release Failed - ${VERSION}"
            if [[ -n "$ERROR" ]]; then
              MESSAGE="Release \`${VERSION}\` failed: \`${ERROR}\`. [View Pipeline](${RUN_URL})"
            else
              MESSAGE="Release \`${VERSION}\` failed. [View Pipeline](${RUN_URL}) for details."
            fi
            STATUS="failure"
          fi

          # Platform-specific formatting
          SLACK_MSG=$(echo "$MESSAGE" | sed "s#\\[View Pipeline\\](${RUN_URL})#<${RUN_URL}|View Pipeline>#g")
          SLACK_MSG=$(echo "$SLACK_MSG" | sed "s#\\[View Release\\](${RELEASE_URL})#<${RELEASE_URL}|View Release>#g")

          echo "title=$TITLE" >> "$GITHUB_OUTPUT"
          echo "message=$MESSAGE" >> "$GITHUB_OUTPUT"
          echo "status=$STATUS" >> "$GITHUB_OUTPUT"
          echo "slackMessage=$SLACK_MSG" >> "$GITHUB_OUTPUT"
          echo "discordMessage=$MESSAGE" >> "$GITHUB_OUTPUT"
          echo "teamsMessage=$MESSAGE" >> "$GITHUB_OUTPUT"
