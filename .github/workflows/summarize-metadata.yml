name: 📄 Summarize Metadata

description: |
  Writes a summary of resolved build metadata to the GitHub job summary.

on:
  workflow_call:
    inputs:
      projectName:
        required: true
        type: string
      unityVersion:
        required: true
        type: string
      version:
        required: true
        type: string
      buildType:
        required: true
        type: string
      skipTests:
        required: true
        type: string
      testsOnly:
        required: true
        type: string
      retentionDays:
        required: true
        type: string
      timeoutMinutesTests:
        required: true
        type: string
      timeoutMinutesBuild:
        required: true
        type: string
      buildTargets:
        required: true
        type: string
      validDeployTargets:
        required: true
        type: string
      requiresCombined:
        required: true
        type: string
      skipPerBuildTarget:
        required: true
        type: string
      releaseAlreadyExists:
        required: true
        type: string

jobs:
  summarize:
    name: 📄 Summarize Metadata
    runs-on: ubuntu-latest
    steps:
      - name: Write Summary
        run: |
          BUILD_TARGETS=$(echo '${{ inputs.buildTargets }}' | jq -c '.')
          DEPLOY_TARGETS=$(echo '${{ inputs.validDeployTargets }}' | jq -c '.')

          if [[ -z "$DEPLOY_TARGETS" || "$DEPLOY_TARGETS" == 'null' ]]; then
            DEPLOY_TARGETS='[]'
          fi

          if [[ -z "$BUILD_TARGETS" || "$BUILD_TARGETS" == 'null' ]]; then
            BUILD_TARGETS='[]'
          fi

          echo "## ⏳ Metadata Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Key                          | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|------------------------------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Unity Version                | ${{ inputs.unityVersion }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Project Name                 | ${{ inputs.projectName }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Version                      | ${{ inputs.version }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Type                   | ${{ inputs.buildType }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Skip Tests                   | ${{ inputs.skipTests }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Tests Only                   | ${{ inputs.testsOnly }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Retention Days               | ${{ inputs.retentionDays }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Tests Timeout (minutes)      | ${{ inputs.timeoutMinutesTests }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Timeout (minutes)      | ${{ inputs.timeoutMinutesBuild }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Targets                | \`$BUILD_TARGETS\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Deploy Targets               | \`$DEPLOY_TARGETS\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Requires Combined Artifacts  | ${{ inputs.requiresCombined }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Skip Per-Build-Target Artifacts  | ${{ inputs.skipPerBuildTarget }} |" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ inputs.releaseAlreadyExists }}" == 'true' ]]; then
            echo "❌ **Pipeline was blocked because a GitHub release already exists for version \`${{ inputs.version }}\`.**" >> $GITHUB_STEP_SUMMARY
          fi