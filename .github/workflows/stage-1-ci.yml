name: üöÄ Stage 1 - CI

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Optional base version (e.g., v1.2.3) for release candidate"
        required: false
      buildType:
        description: "Build type"
        required: false
        type: choice
        options:
          - preview
          - release_candidate
          - release
        default: preview
  pull_request:
    types: [ready_for_review, synchronize, reopened]
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
      - 'Tests/**'
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
      - 'Tests/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  prepare-metadata:
    name: ‚è≥ Prepare Metadata
    uses: ./.github/workflows/prepare-metadata.yml
    with:
      version: ${{ inputs.version }}
      buildType: ${{ inputs.buildType || 'preview' }}

  check-unity-tests:
    name: üìã Check Unity Test Requirement
    runs-on: ubuntu-latest
    steps:
      - name: Determine if tests should be skipped
        id: set-skip
        run: |
          if [ "${{ vars.EXCLUDE_UNITY_TESTS }}" = "true" ]; then
            echo "‚úÖ Skipping Unity tests as EXCLUDE_UNITY_TESTS is true."
          else
            echo "üìã Unity tests will run."
          fi

  upload-license:
    needs: check-unity-tests
    if: ${{ (vars.EXCLUDE_UNITY_TESTS || 'false') == 'false' }}
    name: üì•Ô∏è Upload Unity License
    uses: ./.github/workflows/unity-license-uploader.yml
    secrets: inherit

  run-tests:
    name: Run Tests
    needs: [ check-unity-tests, upload-license ]
    if: ${{ (vars.EXCLUDE_UNITY_TESTS || 'false') == 'false' }}
    uses: avalin/unity-ci-templates/.github/workflows/step-1-test.yml@main
    with:
      unityVersion: ${{ vars.UNITY_VERSION || 'auto' }}
      useGitLfs: ${{ vars.USE_GIT_LFS || 'false' }}
      editModePath: ${{ vars.UNITY_TESTS_EDITMODE_PATH || 'Assets/Tests/Editor' }}
      playModePath: ${{ vars.UNITY_TESTS_PLAYMODE_PATH || 'Assets/Tests/PlayMode' }}
      timeoutMinutes: ${{ fromJson(vars.TIMEOUT_TESTS_IN_MINUTES || '15') }}
      quietMode: ${{ github.event.inputs.quietMode || vars.UNITY_TESTS_QUIET_MODE || 'false' }}
    secrets:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
