name: 🧪 Test Deploy & Notify Workflows

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The GitHub release tag (e.g. v0.1.2-ekans)"
        required: true
      projectName:
        description: "Project name used in the release file naming (e.g. Unity_CI_Templates)"
        default: "Unity_CI_Templates"
        required: true
      deployTargets:
        description: "JSON array of deploy targets"
        default: '["gh-pages"]'
        required: true
      releaseResult:
        description: "Whether release should show as a success or a failure"
        default: "success"
        required: true
        type: choice
        options:
          - success
          - failure
      testNotify:
        description: "Whether notifications needs to be tested too"
        required: false
        default: "false"
        type: choice
        options:
          - true
          - false

permissions:
  contents: write
  pull-requests: write

jobs:
  setup-prerequisites:
    name: ⏳ Setup Prerequisites
    uses: avalin/unity-ci-templates/.github/workflows/ci-cd-prerequisites.yml@main
    with:
      excludesUnityTests: "true"
      deployTargets: ${{ inputs.deployTargets }}
    secrets: inherit

  test-deploy:
    name: Test Deploy
    needs: [ setup-prerequisites ]
    uses: avalin/unity-ci-templates/.github/workflows/step-4-deploy.yml@main
    with:
      buildType: release
      version: ${{ inputs.version }}
      projectName: ${{ inputs.projectName }}
      deployTargets: ${{ needs.setup-prerequisites.outputs.validDeployTargets }}
      artifactSource: release
    secrets: inherit

  test-notify:
    name: Test Notify
    uses: avalin/unity-ci-templates/.github/workflows/step-5-notify.yml@main
    if: >
      always() &&
      (needs.test-deploy.result == 'success' || needs.test-deploy.result == 'failure') &&
      inputs.testNotify == 'true'
    needs: [ test-deploy ]
    with:
      releaseResult: ${{ inputs.releaseResult }}
      releaseErrorMessage: ""
      deployResult: ${{ needs.test-deploy.result }}
      version: ${{ inputs.version }}
    secrets: inherit