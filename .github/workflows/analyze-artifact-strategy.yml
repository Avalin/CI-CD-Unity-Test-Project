name: ⚖️ Analyze Artifact Strategy

on:
  workflow_call:
    inputs:
      deployTargets:
        description: "JSON array of deploy targets (e.g. ['steam','itch.io'])"
        type: string
        default: '[]'
      artifactSource:
        description: "Where deploy pulls artifacts from (build or release)"
        type: string
        default: 'build'
    outputs:
      requiresCombined:
        description: "Whether any deploy target needs a combined artifact folder"
        value: ${{ jobs.analyze.outputs.requiresCombined }}
      skipPerPlatform:
        description: "Whether per-platform artifacts can be skipped"
        value: ${{ jobs.analyze.outputs.skipPerPlatform }}

jobs:
  analyze:
    name: 🧠 Analyze Deploy Targets & Strategy
    runs-on: ubuntu-latest
    outputs:
      requiresCombined: ${{ steps.analyze.outputs.requiresCombined }}
      skipPerPlatform: ${{ steps.analyze.outputs.skipPerPlatform }}
    steps:
      - name: 📅 Checkout config
        uses: actions/checkout@v4

      - name: 🧰 Analyze Targets
        id: analyze
        run: |
          CONFIG_FILE=".github/config/deploy-targets.json"
          DEPLOY_TARGETS='${{ inputs.deployTargets }}'
          ARTIFACT_SOURCE='${{ inputs.artifactSource }}'

          echo "🔍 Checking config file..."
          FALLBACK_URL="https://raw.githubusercontent.com/avalin/unity-ci-templates/main/.github/config/deploy-targets.json"
          if [ -f "$CONFIG_FILE" ]; then
            echo "✅ Found local config file: $CONFIG_FILE"
          else
            echo "⚠️ Not found. Downloading from fallback URL..."
            mkdir -p "$(dirname "$CONFIG_FILE")"
            curl -sSL "$FALLBACK_URL" -o "$CONFIG_FILE" || {
              echo "❌ Failed to download fallback config. Skipping combine logic."
              echo "requiresCombined=false" >> $GITHUB_OUTPUT
              echo "skipPerPlatform=false" >> $GITHUB_OUTPUT
              exit 0
            }
          fi

          echo "🔄 Parsing deploy targets..."
          requires_combined=false
          all_require_combined=true
          any_target=false

          for t in $(echo "$DEPLOY_TARGETS" | jq -r '.[]'); do
            any_target=true
            required=$(jq -r --arg t "$t" '.[$t].requiresCombinedArtifact // false' "$CONFIG_FILE")
            if [ "$required" = "true" ]; then
              echo "🔹 $t requires combined artifact."
              requires_combined=true
            else
              echo "✔️ $t does not require combined artifact."
              all_require_combined=false
            fi
          done

          echo "requiresCombined=$requires_combined" >> $GITHUB_OUTPUT

          # ─────────────────────────────────────────────────────────────────────────
          # 🧠 When can we skip uploading per-platform artifacts?
          # We can skip if:
          # - All deploy targets require combined artifacts (true)
          # - AND we're deploying from GitHub Releases (artifactSource == 'release')
          # ─────────────────────────────────────────────────────────────────────────
          if [ "$any_target" = "true" ] && [ "$all_require_combined" = "true" ] && [ "$ARTIFACT_SOURCE" = "release" ]; then
            echo "🔹 All deploy targets use combined artifacts and pull from release."
            echo "skipPerPlatform=true" >> $GITHUB_OUTPUT
            skip_per_platform=true
          else
            echo "skipPerPlatform=false" >> $GITHUB_OUTPUT
            skip_per_platform=false
          fi

          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "⚖️ Artifact Strategy Analysis Summary"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🔸 requiresCombined : $requires_combined"
          echo "🔸 skipPerPlatform  : $skip_per_platform"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
