name: âœ¨ Build Unity Project

on:
  workflow_call:
    inputs:
      buildType:
        description: 'Build type (preview or release)'
        required: false
        default: 'preview'
        type: string
      unityVersion:
        description: 'Unity version to use'
        required: false
        default: '2022.3.60f1'
        type: string
      macPlatforms:
        description: 'List of target platforms for macOS (as a JSON array, e.g., ["StandaloneOSX", "iOS"])'
        required: false
        default: '["StandaloneOSX", "iOS"]'
        type: string
      ubuntuPlatforms:
        description: 'List of target platforms for Ubuntu (as a JSON array, e.g., ["Android", "WebGL", "StandaloneWindows", "StandaloneWindows64", "StandaloneLinux64"])'
        required: false
        default: '["Android", "WebGL", "StandaloneWindows", "StandaloneWindows64", "StandaloneLinux64"]'
        type: string
    secrets:
      UNITY_LICENSE:
        required: true
      UNITY_EMAIL:
        required: true
      UNITY_PASSWORD:
        required: true

jobs:
  build_on_macos:
    name: Build on macOS for ${{ matrix.targetPlatform }}
    runs-on: macOS-latest
    strategy:
      matrix:
        targetPlatform: ${{ fromJson(inputs.macPlatforms) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Restore Unity Library Cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: Library-${{ matrix.targetPlatform }}-

      - name: Build Unity Project on macOS
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ inputs.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ inputs.buildType }}
          path: build/${{ matrix.targetPlatform }}

  build_on_ubuntu:
    name: Build on Ubuntu for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targetPlatform: ${{ fromJson(inputs.ubuntuPlatforms) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Restore Unity Library Cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: Library-${{ matrix.targetPlatform }}-

      - name: Check Free Disk Space (Android only)
        if: ${{ matrix.targetPlatform == 'Android' }}
        uses: jlumbroso/free-disk-space@v1.3.1

      - name: Build Unity Project on Ubuntu
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ inputs.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ inputs.buildType }}
          path: build/${{ matrix.targetPlatform }}

  confirm_builds:
    name: Confirm Builds
    runs-on: ubuntu-latest
    needs:
      - build_on_macos
      - build_on_ubuntu
    steps:
      - name: Confirm Builds
        run: echo "All builds completed successfully!"
