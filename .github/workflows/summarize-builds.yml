name: 📄 Summarize Build Results

description: |
  Writes a summary of the Unity build results, including per-build-target status
  and combined artifact status.

on:
  workflow_call:
    inputs:
      quietMode:
        required: true
        type: string
      projectName:
        required: true
        type: string
      buildVersion:
        required: true
        type: string
      groupedBuildTargets:
        required: true
        type: string
      combineRequested:
        required: true
        type: string
      combinedCreated:
        required: false
        type: string
        default: "false"
    outputs:
      didAnyBuildsFail:
        description: "True if any builds failed"
        value: ${{ jobs.summarize.outputs.didAnyBuildsFail }}

jobs:
  summarize:
    name: 📄 Summarize Build Results
    runs-on: ubuntu-latest
    outputs:
      didAnyBuildsFail: ${{ steps.summary.outputs.didAnyBuildsFail }}
    steps:
      - name: 📁 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Download Combined Artifact
        if: ${{ inputs.combineRequested == 'true' }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.projectName }}-${{ inputs.buildVersion }}
          path: all-artifacts

      - name: 📦 Download Per-Build-Target Artifacts
        if: ${{ inputs.combineRequested == 'false' }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          grouped='${{ inputs.groupedBuildTargets }}'
          version='${{ inputs.buildVersion }}'
          project='${{ inputs.projectName }}'

          echo "$grouped" | jq -r 'to_entries[].value[]' | while read -r buildTarget; do
            name="${project}-${version}-${buildTarget}"
            echo "⬇️ Downloading: $name"
            mkdir -p "all-artifacts/${name}"
            gh run download --name "$name" --dir "all-artifacts/${name}" || echo "⚠️ Failed to download $name"
          done

      - name: ✅ Analyze Build Results
        id: analyze
        run: |
          echo "build_failed=0" >> "$GITHUB_OUTPUT"
          echo "" > result_status.tmp

          GROUPED='${{ inputs.groupedBuildTargets }}'
          VERSION='${{ inputs.buildVersion }}'
          PROJECT='${{ inputs.projectName }}'
          COMBINED='${{ inputs.combineRequested }}'
          ALL_BUILD_TARGETS=$(echo "$GROUPED" | jq -r 'to_entries[].value[]')

          for buildTarget in $ALL_BUILD_TARGETS; do
            label="$buildTarget"

            if [[ "$COMBINED" == "true" ]]; then
              if [ -d "all-artifacts/${PROJECT}-${VERSION}/${buildTarget}" ]; then
                artifact_dir="all-artifacts/${PROJECT}-${VERSION}/${buildTarget}"
              elif [ -d "all-artifacts/${buildTarget}" ]; then
                artifact_dir="all-artifacts/${buildTarget}"
              else
                artifact_dir=""
              fi
            else
              artifact_dir="all-artifacts/${PROJECT}-${VERSION}-${buildTarget}"
            fi

            if [ -n "$artifact_dir" ] && [ -n "$(find "$artifact_dir" -mindepth 1 -type f 2>/dev/null)" ]; then
              echo "$label:success" >> result_status.tmp
            else
              echo "$label:fail" >> result_status.tmp
              echo "build_failed=1" >> "$GITHUB_OUTPUT"
            fi
          done

      - name: 📝 Write Build Summary
        id: summary
        run: |
          echo "### 🧩 Unity Build Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Build Target | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|--------------|--------|" >> $GITHUB_STEP_SUMMARY

          while IFS=: read -r target result; do
            if [[ "$result" == "success" ]]; then
              echo "| $target | ✅ Build successful |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| $target | ❌ Build failed |" >> $GITHUB_STEP_SUMMARY
            fi
          done < result_status.tmp

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📆 Combined Artifact" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ inputs.combineRequested }}" == "true" ]]; then
            if [[ "${{ inputs.combinedCreated }}" == "true" ]]; then
              echo "- ✅ Combined artifact successfully created and uploaded." >> $GITHUB_STEP_SUMMARY
            else
              echo "- ❌ Combined artifact expected but failed to create/upload." >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "- ℹ️ Combined artifact was not requested." >> $GITHUB_STEP_SUMMARY
          fi

          if [[ "${{ steps.analyze.outputs.build_failed }}" == "1" ]]; then
            echo "didAnyBuildsFail=true" >> $GITHUB_OUTPUT
          else
            echo "didAnyBuildsFail=false" >> $GITHUB_OUTPUT
          fi