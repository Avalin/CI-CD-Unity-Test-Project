name: 📄 Summarize Builds

description: |
  Writes a summary of the Unity build results, including per-platform status
  and combined artifact status.

on:
  workflow_call:
    inputs:
      projectName:
        required: true
        type: string
      version:
        required: true
        type: string
      groupedPlatforms:
        required: true
        type: string
      combineRequested:
        required: true
        type: string
      combinedCreated:
        required: false
        type: string
        default: "false"

jobs:
  summarize:
    name: 📄 Summarize Build Results
    runs-on: ubuntu-latest
    steps:
      - name: 📁 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Download Combined Artifact
        if: ${{ inputs.combineRequested == 'true' }}
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: 🛠️ Normalize Artifact Layout
        if: ${{ inputs.combineRequested == 'true' }}
        run: |
          .github/scripts/general/normalize-artifact-layout.sh all-artifacts

      - name: 📦 Download Per-Platform Artifacts
        if: ${{ inputs.combineRequested == 'false' }}
        run: |
          grouped='${{ inputs.groupedPlatforms }}'
          version='${{ inputs.version }}'
          project='${{ inputs.projectName }}'

          echo "$grouped" | jq -r 'to_entries[].value[]' | while read -r platform; do
            name="${project}-${version}-${platform}"
            mkdir -p "all-artifacts/${name}"
            gh run download --name "$name" --dir "all-artifacts/${name}" || echo "⚠️ Failed to download $name"
          done

      - name: 📜 Write Build Summary
        run: |
          echo "### 🧩 Unity Build Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Platform | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY

          GROUPED='${{ inputs.groupedPlatforms }}'
          VERSION='${{ inputs.version }}'
          PROJECT='${{ inputs.projectName }}'
          ALL_PLATFORMS=$(echo "$GROUPED" | jq -r 'to_entries[].value[]')

          for platform in $ALL_PLATFORMS; do
            artifact_dir="all-artifacts/${PROJECT}-${VERSION}-${platform}"

            case "$platform" in
              Android) label="Android" ;;
              WebGL) label="WebGL" ;;
              StandaloneWindows|StandaloneWindows64) label="Windows" ;;
              StandaloneLinux64) label="Linux" ;;
              StandaloneOSX) label="macOS" ;;
              iOS) label="iOS" ;;
              *) label="$platform" ;;
            esac

            if [ -d "$artifact_dir" ]; then
              size=$(du -sh "$artifact_dir" | cut -f1)
              echo "| $label | ✅ Build successful ($size) |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| $label | ❌ Build failed |" >> $GITHUB_STEP_SUMMARY
            fi
          done

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📆 Combined Artifact" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ inputs.combineRequested }}" == "true" ]]; then
            if [[ "${{ inputs.combinedCreated }}" == "true" ]]; then
              combined_dir="all-artifacts"
              platform_dirs=$(find "$combined_dir" -maxdepth 1 -type d -name "${PROJECT}-${VERSION}-*" ! -path "$combined_dir" || true)
              num_platforms=$(echo "$platform_dirs" | grep -c . || true)
              size=$(du -sh "$combined_dir" | cut -f1)

              echo "- ✅ Combined artifact contains $num_platforms platform(s), total size: $size." >> $GITHUB_STEP_SUMMARY
            else
              echo "- ❌ Combined artifact expected but failed to create/upload." >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "- ℹ️ Combined artifact was not requested." >> $GITHUB_STEP_SUMMARY
          fi