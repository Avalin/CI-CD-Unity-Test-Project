name: ðŸš€ Full CI/CD Pipeline

on:
  # Allow manual dispatch with a buildType input
  workflow_dispatch:
    inputs:
      buildType:
        description: "Choose build type"
        required: true
        default: "preview"
        type: choice
        options:
          - preview
          - release
      targetPlatforms:
        description: "JSON array of platforms to build"
        type: string
        default: '["Android","WebGL","StandaloneLinux64","StandaloneWindows","StandaloneWindows64","StandaloneOSX","iOS"]'
        required: false
        
  # Automatically run tests & builds on certain branches or PR changes
  push:
    tags:
      - 'v*.*.*'
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
      - 'Tests/**'
  pull_request:
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
      - 'Tests/**'

jobs:
  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  # 1. Run Tests
  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  run-tests:
    name: Run Tests
    uses: ./.github/workflows/step-1-test.yml
    with:
      unityVersion: '2022.3.60f1'
      licenseArtifactName: 'unity-license'
      useGitLfs: 'true'
      editModePath: 'Assets/Tests/Editor'
      playModePath: 'Assets/Tests/PlayMode'
    secrets:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  # 2. Build
  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  build:
    name: Build
    needs: [ run-tests ]
    # Only build if:
    # - We have a pull request
    # - We have manual dispatch (either preview or release)
    # - We are pushing to "main"
    # - The event is a push and the ref starts with 'refs/tags/' (i.e. a tag push, for release builds).
    if: >
      github.event_name == 'pull_request' ||
      (github.event_name == 'workflow_dispatch') ||
      github.ref == 'refs/heads/main' ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
    uses: ./.github/workflows/step-2-build.yml
    with:
      # If the event is a push with a tag (which starts with refs/tags/), then force buildType to 'release';
      # Otherwise, use the buildType provided by the workflow_dispatch input.
      buildType: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') ? 'release' : github.event.inputs.buildType }}
      targetPlatforms: ${{ github.event.inputs.targetPlatforms }}
    secrets:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}