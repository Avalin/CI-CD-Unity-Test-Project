name: 🚀 Step 4 - Deploy

on:
  workflow_call:
    inputs:
      buildType:
        type: string
        required: true
      projectName:
        type: string
        required: true
      deployTarget:
        type: string
        required: false
    secrets:
      DEPLOY_API_KEY:
        required: false
      ITCH_USERNAME:
        required: false
      ITCH_PROJECT:
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: deployment-artifacts

      - name: 🧠 Decide Deployment Strategy
        run: |
          echo "Deploying project: ${{ inputs.projectName }}"
          echo "Build type: ${{ inputs.buildType }}"
          echo "Target: ${{ inputs.deployTarget || 'default' }}"

      - name: 🧾 List Artifacts
        run: ls -R deployment-artifacts

# ─────────────────────────────────────────────────────────────────────────────
# Itch.io
# ─────────────────────────────────────────────────────────────────────────────
      - name: 🕹️ Deploy to itch.io (if configured)
        if: ${{ inputs.deployTarget == 'itch.io' }}
        run: |
          butler push "deployment-artifacts/${{ inputs.projectName }}" \
            "${{ secrets.ITCH_USERNAME }}/${{ secrets.ITCH_PROJECT }}:${{ inputs.buildType }}"
        env:
          BUTLER_API_KEY: ${{ secrets.DEPLOY_API_KEY }}

# ─────────────────────────────────────────────────────────────────────────────
# App Center (auto-detect and deploy .apk/.aab/.ipa if they exist)
# ─────────────────────────────────────────────────────────────────────────────
      - name: 📱 Deploy to App Center (if configured)
        if: ${{ inputs.deployTarget == 'appcenter' }}
        run: |
          echo "🔍 Looking for mobile artifacts to deploy..."
          DEPLOY_PATH="deployment-artifacts"

          # Find any .apk, .aab, or .ipa files (recursive)
          FILES=$(find "$DEPLOY_PATH" -type f \( -name "*.apk" -o -name "*.aab" -o -name "*.ipa" \))

          if [ -z "$FILES" ]; then
            echo "⚠️ No mobile build artifacts (.apk, .aab, .ipa) found. Skipping App Center deploy."
            exit 0
          fi

          echo "📦 Found artifacts:"
          echo "$FILES"

          for file in $FILES; do
            echo "🚀 Deploying $file..."
            npx appcenter distribute release \
              --app "${{ secrets.APPCENTER_OWNER_NAME }}/${{ inputs.projectName }}" \
              --file "$file" \
              --group "Testers" \
              --token "${{ secrets.DEPLOY_API_KEY }}"
          done

