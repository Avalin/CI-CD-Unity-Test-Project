name: 🚀 Step 4 - Deploy

on:
  workflow_call:
    inputs:
      buildType:
        type: string
        required: true
      projectName:
        type: string
        required: true
      deployTargets:
        description: "JSON array of deploy targets, e.g. ['itch.io','appcenter']"
        type: string
        required: false
        default: '[]'
    secrets:
      DEPLOY_API_KEY:
        required: false
      ITCH_USERNAME:
        required: false
      ITCH_PROJECT:
        required: false
      APPCENTER_OWNER_NAME:
        required: false

jobs:
  deploy:
    if: ${{ inputs.deployTargets != '[]' }}
    name: 🚀 Deploy Targets
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(inputs.deployTargets) }}
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: deployment-artifacts

      - name: 🧠 Show Deployment Info
        run: |
          echo "Deploying to target: ${{ matrix.target }}"
          echo "Project: ${{ inputs.projectName }}"
          echo "Build type: ${{ inputs.buildType }}"

      - name: 🧾 List Artifacts
        run: ls -R deployment-artifacts

      # Itch.io Deployment
      - name: 🕹️ Deploy to itch.io (if selected)
        if: ${{ matrix.target == 'itch.io' }}
        run: |
          butler push "deployment-artifacts/${{ inputs.projectName }}" \
            "${{ secrets.ITCH_USERNAME }}/${{ secrets.ITCH_PROJECT }}:${{ inputs.buildType }}"
        env:
          BUTLER_API_KEY: ${{ secrets.DEPLOY_API_KEY }}

      # App Center Deployment
      - name: 📱 Deploy to App Center (if selected)
        if: ${{ matrix.target == 'appcenter' }}
        run: |
          echo "🔍 Searching for .apk, .aab, or .ipa in artifacts..."
          DEPLOY_PATH="deployment-artifacts"

          FILES=$(find "$DEPLOY_PATH" -type f \( -name "*.apk" -o -name "*.aab" -o -name "*.ipa" \))

          if [ -z "$FILES" ]; then
            echo "⚠️ No mobile build artifacts found. Skipping."
            exit 0
          fi

          echo "📆 Found artifacts:"
          echo "$FILES"

          for file in $FILES; do
            echo "🚀 Deploying $file..."
            npx appcenter distribute release \
              --app "${{ secrets.APPCENTER_OWNER_NAME }}/${{ inputs.projectName }}" \
              --file "$file" \
              --group "Testers" \
              --token "${{ secrets.DEPLOY_API_KEY }}"
          done
