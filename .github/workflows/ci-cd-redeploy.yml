name: ✈️ CI/CD Redeploy

on:
  workflow_dispatch:
    inputs:
      tagVersion:
        description: "The release tag version to deploy from (e.g., v1.2.3)"
        required: true
        default: 'v0.0.0'
        type: string
      deployTargets:
        description: "JSON array of deploy targets (e.g., [\"s3\", \"firebase\"])"
        required: true
        default: '["gh-pages"]'
        type: string
      targetPlatforms:
        description: "JSON array of target platforms (e.g. [\"WebGL\",\"iOS\"]) - Optional (leave empty)"
        required: false
        type: string

permissions:
  contents: write

jobs:
  # ─────────────────────────────────────────────────────────────────────────────
  # 1. Validate Release and Artifacts
  # ─────────────────────────────────────────────────────────────────────────────
  validate_release:
    name: Validate Release Tag and Artifacts
    runs-on: ubuntu-latest
    outputs:
      hasCombinedArtifacts: ${{ steps.check.outputs.hasCombinedArtifacts }}
    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Check GitHub Release Exists and Artifacts
        id: check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔍 Checking if release '${{ inputs.tagVersion }}' exists..." | tee -a "$GITHUB_STEP_SUMMARY"

          # Attempt to fetch release data and save to file
          if ! gh api repos/${{ github.repository }}/releases/tags/${{ inputs.tagVersion }} --jq '.' > release.json; then
            echo "❌ Release '${{ inputs.tagVersion }}' not found or API call failed." | tee -a "$GITHUB_STEP_SUMMARY"
            exit 1
          fi

          echo "✅ Release found. Redeploying: '${{ inputs.tagVersion }}'..." | tee -a "$GITHUB_STEP_SUMMARY"

          # Load release data
          RELEASE_DATA=$(cat release.json)

          # Check for combined artifact
          COMBINED_FOUND=$(echo "$RELEASE_DATA" | jq -r '.assets[]?.name' | grep -c 'all-platforms' || true)
          if [ "$COMBINED_FOUND" -gt 0 ]; then
            echo "✅ Combined artifact detected." | tee -a "$GITHUB_STEP_SUMMARY"
            echo "hasCombinedArtifacts=true" >> "$GITHUB_OUTPUT"
          else
            echo "ℹ️ No combined artifact detected." | tee -a "$GITHUB_STEP_SUMMARY"
            echo "hasCombinedArtifacts=false" >> "$GITHUB_OUTPUT"
          fi

  validate_platforms_in_release:
    name: Validate Platforms in Release
    needs: validate_release
    uses: ./.github/workflows/validate-platforms-in-release.yml
    with:
      tagVersion: ${{ inputs.tagVersion }}
      targetPlatforms: ${{ inputs.targetPlatforms != '' && inputs.targetPlatforms || vars.TARGET_PLATFORMS || '[]' }}

  # ─────────────────────────────────────────────────────────────────────────────
  # 2. Redeploy
  # ─────────────────────────────────────────────────────────────────────────────
  redeploy:
    name: Redeploy from Release
    needs: 
      - validate_release
      - validate_platforms_in_release
    uses: avalin/unity-ci-templates/.github/workflows/step-4-deploy.yml@main
    with:
      buildType: release
      version: ${{ inputs.tagVersion }}
      projectName: ${{ vars.PROJECT_NAME }}
      deployTargets: ${{ inputs.deployTargets || '[]' }}
      targetPlatforms: ${{ needs.validate_platforms_in_release.outputs.validatedTargetPlatforms }}
      hasCombinedArtifacts: ${{ needs.validate_release.outputs.hasCombinedArtifacts }}
      artifactSource: release
    secrets: inherit

  # ─────────────────────────────────────────────────────────────────────────────
  # 3. Notify
  # ─────────────────────────────────────────────────────────────────────────────
  notify:
    name: Notify
    needs: 
      - redeploy
    uses: avalin/unity-ci-templates/.github/workflows/step-5-notify.yml@main
    with:
      version: ${{ inputs.tagVersion }}
      releaseResult: 'success'
      releaseErrorMessage: ''
      deployResult: ${{ needs.redeploy.result }}
      testsHasFails: 0
      testsTotal: 0
      testsPassed: 0
      testsFailedNames: ''
    secrets: inherit