name: 🏷️ Build Version Generator

on:
  workflow_call:
    inputs:
      buildType:
        description: "Build type (preview or release)"
        required: true
        type: string
    outputs:
      version:
        description: "The generated build version"
        value: ${{ jobs.determine.outputs.version }}

jobs:
  determine:
    name: Parse Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Determine Version
        id: get_version
        shell: bash
        run: |
          REF="${GITHUB_REF}"

          if [[ "$REF" =~ ^refs/pull/([0-9]+)/merge$ ]]; then
            # --- PR build
            PR_NUMBER=$(printf "%04d" "${BASH_REMATCH[1]}")
            VERSION="PR-${PR_NUMBER}"

          elif [[ "$REF" =~ ^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9\.-]+)?)$ ]]; then
            # --- Tag build
            VERSION="v${BASH_REMATCH[1]}"

          elif [[ "$REF" =~ ^refs/heads/(.+)$ ]]; then
            # --- Branch build
            BRANCH_NAME=$(echo "${BASH_REMATCH[1]}" | tr '/' '-')
            # --- Manual/Workflow Dispatch
            if [ "${GITHUB_EVENT_NAME}" = "workflow_dispatch" ]; then
              VERSION="manual-${BRANCH_NAME}"
            else
            # --- Default to Branch Name
              VERSION="${BRANCH_NAME}"
            fi
          else
            echo "❌ Unrecognized GITHUB_REF format: $REF"
            exit 1
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "🏷️ Determined version: $VERSION"

