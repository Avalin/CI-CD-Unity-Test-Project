name: üìä Unity Test Runner

on:
  workflow_call:
    inputs:
      testMode:
        description: "Unity test mode to run (EditMode or PlayMode)"
        required: true
        type: string
      unityVersion:
        description: "Unity version to use"
        required: false
        default: 'auto'
        type: string
      useGitLfs:
        description: "Whether to use Git LFS (true/false)"
        required: false
        default: 'true'
        type: string
      licenseArtifactName:
        description: "Name of uploaded license artifact"
        required: false
        default: 'unity-license'
        type: string

jobs:
  run-tests:
    name: Run ${{ inputs.testMode }} Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create LFS file list
        if: inputs.useGitLfs == 'true'
        run: |
          git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id || true

      - name: Restore LFS cache
        if: inputs.useGitLfs == 'true'
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        if: inputs.useGitLfs == 'true'
        run: git lfs pull

      - name: Download Unity License Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.licenseArtifactName }}
          path: ~/.local/share/unity3d/Unity

      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ inputs.testMode }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ inputs.testMode }}-

      - name: üßæ Print selected Unity version
        run: |
          echo "üõ† Using Unity version: ${{ inputs.unityVersion }}"

      - name: Run ${{ inputs.testMode }} Tests
        id: run-tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: ${{ inputs.testMode }}

      - name: Upload ${{ inputs.testMode }} Test Results (if tests failed)
        if: failure() && steps.run-tests.outputs.artifactsPath != ''
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.testMode }} Test Results
          path: ${{ steps.run-tests.outputs.artifactsPath }}
          retention-days: 7

      - name: Log Result Path (if tests failed)
        if: failure()
        run: |
          if [ -z "${{ steps.run-tests.outputs.artifactsPath }}" ]; then
            echo "‚ö†Ô∏è No test results found. Maybe test step was skipped or failed early."
          else
            echo "‚úÖ Test results located at: ${{ steps.run-tests.outputs.artifactsPath }}"
          fi