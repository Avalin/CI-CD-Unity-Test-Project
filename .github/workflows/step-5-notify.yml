name: ðŸ“£ Step 5 - Notify

on:
  workflow_call:
    inputs:
      releaseResult:
        required: true
        type: string
      releaseErrorMessage:
        required: false
        type: string
      deployResult:
        required: true
        type: string
      version:
        required: true
        type: string

jobs:
  generate-notification:
    uses: avalin/unity-ci-templates/.github/workflows/generate-notification.yml@main
    with:
      releaseResult: ${{ inputs.releaseResult }}
      releaseErrorMessage: ${{ inputs.releaseErrorMessage }}
      deployResult: ${{ inputs.deployResult }}
      version: ${{ inputs.version }}

  notify:
    if: startsWith(inputs.version, 'v') && !contains(inputs.version, '-preview')
    needs: generate-notification
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¢ Send Slack Notification (if configured)
        if: ${{ env.SLACK_WEBHOOK != '' }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "*${{ needs.generate-notification.outputs.title }}* - `${{ github.repository }}`",
              "attachments": [
                {
                  "text": "${{ needs.generate-notification.outputs.message }}",
                  "color": "${{ needs.generate-notification.outputs.status == 'success' && 'good' || needs.generate-notification.outputs.status == 'failure' && 'danger' || '#cccccc' }}"
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: ðŸ“¢ Send Discord Notification (if configured)
        if: ${{ env.DISCORD_WEBHOOK != '' }}
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"username\":\"GitHub CI\",\"embeds\":[{\"title\":\"${{ needs.generate-notification.outputs.title }}\",\"description\":\"${{ needs.generate-notification.outputs.message }}\",\"color\":${{ needs.generate-notification.outputs.status == 'success' && 3066993 || needs.generate-notification.outputs.status == 'failure' && 15158332 || 9807270 }} }]}" \
               $DISCORD_WEBHOOK
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

      - name: ðŸ“¢ Notify Microsoft Teams (if configured)
        if: ${{ env.MSTEAMS_WEBHOOK != '' }}
        run: |
          case "${{ needs.generate-notification.outputs.status }}" in
            success) COLOR="00FF00" ;;
            failure) COLOR="FF0000" ;;
            *) COLOR="999999" ;;
          esac

          curl -H "Content-Type: application/json" \
               -d "{
                     \"@type\": \"MessageCard\",
                     \"@context\": \"http://schema.org/extensions\",
                     \"summary\": \"CI/CD Notification\",
                     \"themeColor\": \"$COLOR\",
                     \"title\": \"${{ needs.generate-notification.outputs.title }}\",
                     \"text\": \"${{ needs.generate-notification.outputs.message }}\"
                   }" \
               $MSTEAMS_WEBHOOK
        env:
          MSTEAMS_WEBHOOK: ${{ secrets.MSTEAMS_WEBHOOK }}
