name: 🔖 Version Resolver

on:
  workflow_call:
    inputs:
      buildType:
        description: "Build type: preview | release_candidate | release"
        required: true
        type: string
      version:
        description: "Optional version override from workflow input"
        required: false
        type: string
    outputs:
      version:
        description: "The resolved build version string"
        value: ${{ jobs.version_resolver.outputs.version }}
      release_existed:
        description: "Whether a GitHub release already exists for this version"
        value: ${{ jobs.version_resolver.outputs.release_existed }}

jobs:
  version_resolver:
    name: Generate Build Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      release_existed: ${{ steps.check_release.outputs.exists }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Fetch All Tags
        run: git fetch --tags --force

      - name: Determine Version
        id: get_version
        uses: avalin/unity-ci-templates/.github/actions/resolve-version@v1
        with:
          ref: "${GITHUB_REF}"
          event: "${GITHUB_EVENT_NAME}"
          input_version: "${{ inputs.version }}"
          build_type: "${{ inputs.buildType }}"

      - name: 📝 Check if Release Version Already Exists
        id: check_release
        uses: avalin/unity-ci-templates/.github/actions/check-release-exists@v1
        with:
          version: ${{ steps.get_version.outputs.version }}
          repo: ${{ github.repository }}
          token: ${{ github.token }}

      - name: 📄 Summarize Build Version Info
        if: ${{ always() && inputs.buildType != 'preview' }}
        run: |
          echo "### 🔖 Version Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Type:** \`${{ inputs.buildType }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger:** \`${{ github.event_name }}\` → \`${{ github.ref }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Resolved Version:** \`${{ steps.get_version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY

          if [[ -z "${{ steps.get_version.outputs.version }}" ]]; then
            echo "- ⚠️ No version was determined - check the 'Determine Version' step logs for details." >> $GITHUB_STEP_SUMMARY
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?$ ]]; then
            echo "- 🏷️ This was a **tag push** - tag already exists by design."
          else
            if [[ "${{ steps.check_release.outputs.exists }}" == "true" ]]; then
              echo "- ⚠️ GitHub Release with tag \`${{ steps.get_version.outputs.version }}\` **already exists** - run will fail on purpose to avoid overwrite." >> $GITHUB_STEP_SUMMARY
            else
              echo "- ✅ Tag \`${{ steps.get_version.outputs.version }}\` **does not exist yet** - good to go!" >> $GITHUB_STEP_SUMMARY
            fi
          fi