name: Resolve Build Profile
description: Resolve the correct Unity Build Profile based on platform, build type, and Unity version.

inputs:
  platform:
    description: The Unity target platform (e.g., StandaloneWindows, Android)
    required: true
  buildType:
    description: The build type (e.g., preview, release_candidate, release)
    required: true
  unityVersion:
    description: The Unity Editor version (e.g., 6000.0.48f1)
    required: true
  configPath:
    description: Optional - path to override the build profiles JSON file
    required: false

outputs:
  profile:
    description: The resolved Build Profile name (empty if none)
    value: ${{ steps.resolve.outputs.profile }}

runs:
  using: composite
  steps:
    - name: Read and resolve Build Profile
      id: resolve
      shell: bash
      run: |
        PLATFORM="${{ inputs.platform }}"
        BUILD_TYPE="${{ inputs.buildType }}"
        UNITY_VERSION="${{ inputs.unityVersion }}"
        CONFIG_PATH=".github/config/build-profiles.json"
        DEFAULT_CONFIG_PATH="${GITHUB_ACTION_PATH}/build-profiles.json"

        # Check Unity version first
        if [[ ! "$UNITY_VERSION" =~ ^6 && ! "$UNITY_VERSION" =~ ^6000 ]]; then
          echo "⚠️ Unity version $UNITY_VERSION does not support Build Profiles; skipping."
          echo "profile=" >> $GITHUB_OUTPUT
          exit 0
        fi

        if [ -n "$CONFIG_PATH" ]; then
          if [ -f "$CONFIG_PATH" ]; then
            echo "ℹ️ Using provided config path: $CONFIG_PATH"
          else
            echo "⚠️ Provided config path $CONFIG_PATH not found! Falling back to internal default."
            CONFIG_PATH="$DEFAULT_CONFIG_PATH"
          fi
        else
          CONFIG_PATH="$DEFAULT_CONFIG_PATH"
          echo "ℹ️ No config path provided. Using internal default: $CONFIG_PATH"
        fi

        if [ ! -f "$CONFIG_PATH" ]; then
          echo "❌ No config file found at fallback path $CONFIG_PATH!"
          echo "profile=" >> $GITHUB_OUTPUT
          exit 0
        fi

        PROFILE=$(jq -r --arg platform "$PLATFORM" --arg type "$BUILD_TYPE" \
          '.[$platform][$type] // empty' "$CONFIG_PATH")

        echo "✅ Unity version $UNITY_VERSION supports Build Profiles."
        echo "Resolved Build Profile for $PLATFORM / $BUILD_TYPE → $PROFILE"

        echo "profile=$PROFILE" >> $GITHUB_OUTPUT